rules_version = '2';
service cloud.firestore {
  
  match /databases/{database}/documents {
    
    match /userPrivate/{userId} {
      // Users can only read their own private data
      allow read: if request.auth != null && request.auth.uid == userId;
      // You may want to restrict write operations as well, e.g., only allowing writes from Cloud Functions
      allow write: if false;
    }
    
    match /userProfile/{userId} {
      // Any authenticated user can read user public profiles
      allow read: if request.auth != null;
      // Users can only update their own public profile data
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /sweets/{tweetId} {
      // Any authenticated user can read tweets
      allow read: if request.auth != null;
      // Only authenticated users can create, update, or delete tweets
      allow write: if request.auth != null;
    }
    
    match /conversations/{conversationId} {
      // Users involved in a conversation can read and write messages
      // Suppose a 'users' field in each conversation document contains an array of UIDs of the users involved in the conversation
      allow read, write: if request.auth != null && request.auth.uid in resource.data.users;
    }
    
    match /likes/{likeId} {
      // Any authenticated user can read likes
      allow read: if request.auth != null;
      // Only authenticated users can create, update, or delete likes
      allow write: if request.auth != null;
    }
    
    match /comments/{commentId} {
      // Any authenticated user can read comments
      allow read: if true;
      // Users can only create, update, or delete their own comments
      allow create: if request.auth != null && request.resource.data.userUid == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.userUid == request.auth.uid;
    }
  }
}
